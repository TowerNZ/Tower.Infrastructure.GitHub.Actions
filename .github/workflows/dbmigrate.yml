name: Build and push dbmigrate image to container registry

on:
  workflow_call:
    inputs:
      DOTNET-VERSION:
        required: true
        type: string        
      CONTAINER-NAME:
        required: true
        type: string
      CONTAINER-REGISTRY:
        required: true
        type: string      
      DBMIGRATE-FOLDER:
        required: true
        type: string        
    outputs:
      IMAGE-NAME:
        description: "Name of the built container image"
        value: ${{ jobs.build.outputs.imageName }}
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
jobs:

  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Source/${{ inputs.DBMIGRATE-FOLDER }}

    outputs:
      imageName: ${{ steps.build-and-push-image.outputs.imageName }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ inputs.DOTNET-VERSION }}
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
#    - name: Test
#      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish -c Release -p:PublishDir=out
      
    - name: 'Login to container registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.CONTAINER-REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
 
    - name: 'Build and push image'
      id: build-and-push-image
      run: |
       cd ./${{ inputs.APPLICATION-FOLDER }}
       export IMAGENAME=${{ inputs.CONTAINER-NAME }}:${{ github.sha }}
       docker build -f Dockerfile.k8s . -t ${{ inputs.CONTAINER-REGISTRY }}/$IMAGENAME
       docker push ${{ inputs.CONTAINER-REGISTRY }}/$IMAGENAME
       echo "::set-output name=imageName::$IMAGENAME"
